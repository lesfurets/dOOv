package ${package.name};

import static io.doov.core.dsl.field.FieldInfoBuilder.fieldInfo;
import static java.util.Arrays.asList;
import static java.util.Collections.unmodifiableList;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.stream.Stream;

import javax.annotation.Generated;

import io.doov.core.dsl.field.*;
import io.doov.core.*;

${imports}

@Generated(value = "${source.generator.name}", comments = "generated from ${process.class}")
public enum ${target.class.name} implements DelegatingFieldInfo {
${constants}
    ;

    static final List<FieldInfo> fieldInfos = unmodifiableList(asList(${target.class.name}.values()));

    public static Stream<FieldInfo> stream() {
        return fieldInfos.stream();
    }

    public static List<FieldInfo> fieldInfos() {
        return fieldInfos;
    }

    private final FieldInfo delegate;

    ${target.class.name}(FieldInfo delegate) {
        this.delegate = delegate;
    }

    @Override
    public FieldInfo delegate() {
        return delegate;
    }

}